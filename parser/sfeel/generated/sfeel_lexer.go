// Code generated from SFeel.g4 by ANTLR 4.9.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 21, 263,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3,
	5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 5, 7, 85, 10, 7, 3, 7, 3, 7, 7, 7, 89,
	10, 7, 12, 7, 14, 7, 92, 11, 7, 5, 7, 94, 10, 7, 3, 8, 3, 8, 3, 8, 3, 8,
	5, 8, 100, 10, 8, 3, 8, 6, 8, 103, 10, 8, 13, 8, 14, 8, 104, 3, 8, 3, 8,
	7, 8, 109, 10, 8, 12, 8, 14, 8, 112, 11, 8, 3, 8, 3, 8, 5, 8, 116, 10,
	8, 3, 9, 3, 9, 7, 9, 120, 10, 9, 12, 9, 14, 9, 123, 11, 9, 3, 9, 3, 9,
	3, 10, 3, 10, 3, 10, 3, 10, 5, 10, 131, 10, 10, 3, 11, 3, 11, 5, 11, 135,
	10, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16,
	3, 16, 3, 17, 3, 17, 5, 17, 149, 10, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3,
	18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3, 21,
	3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3,
	26, 3, 26, 3, 27, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28,
	3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3,
	28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29,
	3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3,
	30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 5, 30,
	228, 10, 30, 3, 31, 3, 31, 3, 31, 3, 31, 5, 31, 234, 10, 31, 3, 32, 3,
	32, 3, 32, 3, 32, 3, 32, 3, 32, 5, 32, 242, 10, 32, 3, 33, 3, 33, 3, 33,
	3, 33, 3, 33, 3, 33, 5, 33, 250, 10, 33, 3, 34, 3, 34, 3, 34, 3, 34, 5,
	34, 256, 10, 34, 3, 35, 3, 35, 3, 35, 3, 35, 5, 35, 262, 10, 35, 2, 2,
	36, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 2, 21, 2,
	23, 2, 25, 2, 27, 2, 29, 2, 31, 2, 33, 11, 35, 2, 37, 2, 39, 12, 41, 13,
	43, 14, 45, 15, 47, 16, 49, 17, 51, 18, 53, 19, 55, 20, 57, 21, 59, 2,
	61, 2, 63, 2, 65, 2, 67, 2, 69, 2, 3, 2, 7, 4, 2, 45, 45, 47, 47, 6, 2,
	99, 124, 230, 230, 248, 248, 254, 254, 6, 2, 67, 92, 198, 198, 216, 216,
	222, 222, 4, 2, 11, 11, 34, 34, 7, 2, 35, 35, 37, 49, 60, 66, 93, 98, 125,
	128, 2, 270, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9,
	3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2,
	17, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2,
	2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2,
	2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2,
	2, 2, 3, 71, 3, 2, 2, 2, 5, 73, 3, 2, 2, 2, 7, 75, 3, 2, 2, 2, 9, 77, 3,
	2, 2, 2, 11, 80, 3, 2, 2, 2, 13, 93, 3, 2, 2, 2, 15, 115, 3, 2, 2, 2, 17,
	117, 3, 2, 2, 2, 19, 130, 3, 2, 2, 2, 21, 134, 3, 2, 2, 2, 23, 136, 3,
	2, 2, 2, 25, 138, 3, 2, 2, 2, 27, 140, 3, 2, 2, 2, 29, 142, 3, 2, 2, 2,
	31, 144, 3, 2, 2, 2, 33, 148, 3, 2, 2, 2, 35, 150, 3, 2, 2, 2, 37, 155,
	3, 2, 2, 2, 39, 161, 3, 2, 2, 2, 41, 163, 3, 2, 2, 2, 43, 166, 3, 2, 2,
	2, 45, 168, 3, 2, 2, 2, 47, 171, 3, 2, 2, 2, 49, 173, 3, 2, 2, 2, 51, 175,
	3, 2, 2, 2, 53, 177, 3, 2, 2, 2, 55, 181, 3, 2, 2, 2, 57, 199, 3, 2, 2,
	2, 59, 227, 3, 2, 2, 2, 61, 233, 3, 2, 2, 2, 63, 241, 3, 2, 2, 2, 65, 249,
	3, 2, 2, 2, 67, 255, 3, 2, 2, 2, 69, 261, 3, 2, 2, 2, 71, 72, 7, 42, 2,
	2, 72, 4, 3, 2, 2, 2, 73, 74, 7, 43, 2, 2, 74, 6, 3, 2, 2, 2, 75, 76, 7,
	47, 2, 2, 76, 8, 3, 2, 2, 2, 77, 78, 7, 48, 2, 2, 78, 79, 7, 48, 2, 2,
	79, 10, 3, 2, 2, 2, 80, 81, 9, 2, 2, 2, 81, 12, 3, 2, 2, 2, 82, 94, 7,
	50, 2, 2, 83, 85, 5, 11, 6, 2, 84, 83, 3, 2, 2, 2, 84, 85, 3, 2, 2, 2,
	85, 86, 3, 2, 2, 2, 86, 90, 4, 51, 59, 2, 87, 89, 5, 27, 14, 2, 88, 87,
	3, 2, 2, 2, 89, 92, 3, 2, 2, 2, 90, 88, 3, 2, 2, 2, 90, 91, 3, 2, 2, 2,
	91, 94, 3, 2, 2, 2, 92, 90, 3, 2, 2, 2, 93, 82, 3, 2, 2, 2, 93, 84, 3,
	2, 2, 2, 94, 14, 3, 2, 2, 2, 95, 96, 7, 50, 2, 2, 96, 97, 11, 2, 2, 2,
	97, 116, 7, 50, 2, 2, 98, 100, 5, 11, 6, 2, 99, 98, 3, 2, 2, 2, 99, 100,
	3, 2, 2, 2, 100, 102, 3, 2, 2, 2, 101, 103, 5, 27, 14, 2, 102, 101, 3,
	2, 2, 2, 103, 104, 3, 2, 2, 2, 104, 102, 3, 2, 2, 2, 104, 105, 3, 2, 2,
	2, 105, 106, 3, 2, 2, 2, 106, 110, 7, 48, 2, 2, 107, 109, 5, 27, 14, 2,
	108, 107, 3, 2, 2, 2, 109, 112, 3, 2, 2, 2, 110, 108, 3, 2, 2, 2, 110,
	111, 3, 2, 2, 2, 111, 113, 3, 2, 2, 2, 112, 110, 3, 2, 2, 2, 113, 114,
	4, 51, 59, 2, 114, 116, 3, 2, 2, 2, 115, 95, 3, 2, 2, 2, 115, 99, 3, 2,
	2, 2, 116, 16, 3, 2, 2, 2, 117, 121, 7, 36, 2, 2, 118, 120, 5, 19, 10,
	2, 119, 118, 3, 2, 2, 2, 120, 123, 3, 2, 2, 2, 121, 119, 3, 2, 2, 2, 121,
	122, 3, 2, 2, 2, 122, 124, 3, 2, 2, 2, 123, 121, 3, 2, 2, 2, 124, 125,
	7, 36, 2, 2, 125, 18, 3, 2, 2, 2, 126, 131, 5, 21, 11, 2, 127, 131, 5,
	27, 14, 2, 128, 131, 5, 31, 16, 2, 129, 131, 5, 29, 15, 2, 130, 126, 3,
	2, 2, 2, 130, 127, 3, 2, 2, 2, 130, 128, 3, 2, 2, 2, 130, 129, 3, 2, 2,
	2, 131, 20, 3, 2, 2, 2, 132, 135, 5, 23, 12, 2, 133, 135, 5, 25, 13, 2,
	134, 132, 3, 2, 2, 2, 134, 133, 3, 2, 2, 2, 135, 22, 3, 2, 2, 2, 136, 137,
	9, 3, 2, 2, 137, 24, 3, 2, 2, 2, 138, 139, 9, 4, 2, 2, 139, 26, 3, 2, 2,
	2, 140, 141, 4, 50, 59, 2, 141, 28, 3, 2, 2, 2, 142, 143, 9, 5, 2, 2, 143,
	30, 3, 2, 2, 2, 144, 145, 9, 6, 2, 2, 145, 32, 3, 2, 2, 2, 146, 149, 5,
	35, 18, 2, 147, 149, 5, 37, 19, 2, 148, 146, 3, 2, 2, 2, 148, 147, 3, 2,
	2, 2, 149, 34, 3, 2, 2, 2, 150, 151, 7, 118, 2, 2, 151, 152, 7, 116, 2,
	2, 152, 153, 7, 119, 2, 2, 153, 154, 7, 103, 2, 2, 154, 36, 3, 2, 2, 2,
	155, 156, 7, 104, 2, 2, 156, 157, 7, 99, 2, 2, 157, 158, 7, 110, 2, 2,
	158, 159, 7, 117, 2, 2, 159, 160, 7, 103, 2, 2, 160, 38, 3, 2, 2, 2, 161,
	162, 7, 62, 2, 2, 162, 40, 3, 2, 2, 2, 163, 164, 7, 62, 2, 2, 164, 165,
	7, 63, 2, 2, 165, 42, 3, 2, 2, 2, 166, 167, 7, 64, 2, 2, 167, 44, 3, 2,
	2, 2, 168, 169, 7, 64, 2, 2, 169, 170, 7, 63, 2, 2, 170, 46, 3, 2, 2, 2,
	171, 172, 7, 93, 2, 2, 172, 48, 3, 2, 2, 2, 173, 174, 7, 95, 2, 2, 174,
	50, 3, 2, 2, 2, 175, 176, 7, 46, 2, 2, 176, 52, 3, 2, 2, 2, 177, 178, 7,
	112, 2, 2, 178, 179, 7, 113, 2, 2, 179, 180, 7, 118, 2, 2, 180, 54, 3,
	2, 2, 2, 181, 182, 7, 70, 2, 2, 182, 183, 7, 99, 2, 2, 183, 184, 7, 118,
	2, 2, 184, 185, 7, 103, 2, 2, 185, 186, 7, 67, 2, 2, 186, 187, 7, 112,
	2, 2, 187, 188, 7, 102, 2, 2, 188, 189, 7, 86, 2, 2, 189, 190, 7, 107,
	2, 2, 190, 191, 7, 111, 2, 2, 191, 192, 7, 103, 2, 2, 192, 193, 7, 42,
	2, 2, 193, 194, 7, 36, 2, 2, 194, 195, 3, 2, 2, 2, 195, 196, 5, 57, 29,
	2, 196, 197, 7, 36, 2, 2, 197, 198, 7, 43, 2, 2, 198, 56, 3, 2, 2, 2, 199,
	200, 5, 59, 30, 2, 200, 201, 7, 47, 2, 2, 201, 202, 5, 61, 31, 2, 202,
	203, 7, 47, 2, 2, 203, 204, 5, 63, 32, 2, 204, 205, 7, 86, 2, 2, 205, 206,
	5, 65, 33, 2, 206, 207, 7, 60, 2, 2, 207, 208, 5, 67, 34, 2, 208, 209,
	7, 60, 2, 2, 209, 210, 5, 69, 35, 2, 210, 58, 3, 2, 2, 2, 211, 212, 4,
	50, 59, 2, 212, 213, 4, 50, 59, 2, 213, 214, 4, 50, 59, 2, 214, 228, 4,
	51, 59, 2, 215, 216, 4, 50, 59, 2, 216, 217, 4, 50, 59, 2, 217, 218, 4,
	51, 59, 2, 218, 228, 4, 50, 59, 2, 219, 220, 4, 50, 59, 2, 220, 221, 4,
	51, 59, 2, 221, 222, 4, 50, 59, 2, 222, 228, 4, 50, 59, 2, 223, 224, 4,
	51, 59, 2, 224, 225, 4, 50, 59, 2, 225, 226, 4, 50, 59, 2, 226, 228, 4,
	50, 59, 2, 227, 211, 3, 2, 2, 2, 227, 215, 3, 2, 2, 2, 227, 219, 3, 2,
	2, 2, 227, 223, 3, 2, 2, 2, 228, 60, 3, 2, 2, 2, 229, 230, 7, 50, 2, 2,
	230, 234, 4, 51, 59, 2, 231, 232, 7, 51, 2, 2, 232, 234, 4, 50, 52, 2,
	233, 229, 3, 2, 2, 2, 233, 231, 3, 2, 2, 2, 234, 62, 3, 2, 2, 2, 235, 236,
	7, 50, 2, 2, 236, 242, 4, 51, 59, 2, 237, 238, 4, 51, 52, 2, 238, 242,
	4, 50, 59, 2, 239, 240, 7, 53, 2, 2, 240, 242, 4, 50, 51, 2, 241, 235,
	3, 2, 2, 2, 241, 237, 3, 2, 2, 2, 241, 239, 3, 2, 2, 2, 242, 64, 3, 2,
	2, 2, 243, 244, 7, 50, 2, 2, 244, 250, 4, 50, 59, 2, 245, 246, 7, 51, 2,
	2, 246, 250, 4, 50, 59, 2, 247, 248, 7, 52, 2, 2, 248, 250, 4, 50, 53,
	2, 249, 243, 3, 2, 2, 2, 249, 245, 3, 2, 2, 2, 249, 247, 3, 2, 2, 2, 250,
	66, 3, 2, 2, 2, 251, 252, 7, 50, 2, 2, 252, 256, 4, 50, 59, 2, 253, 254,
	4, 51, 55, 2, 254, 256, 4, 50, 59, 2, 255, 251, 3, 2, 2, 2, 255, 253, 3,
	2, 2, 2, 256, 68, 3, 2, 2, 2, 257, 258, 7, 50, 2, 2, 258, 262, 4, 50, 59,
	2, 259, 260, 4, 51, 55, 2, 260, 262, 4, 50, 59, 2, 261, 257, 3, 2, 2, 2,
	261, 259, 3, 2, 2, 2, 262, 70, 3, 2, 2, 2, 20, 2, 84, 90, 93, 99, 104,
	110, 115, 121, 130, 134, 148, 227, 233, 241, 249, 255, 261, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'('", "')'", "'-'", "'..'", "", "", "", "", "", "'<'", "'<='", "'>'",
	"'>='", "'['", "']'", "','", "'not'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "SIGN", "INTEGER", "FLOAT", "STRING", "BOOL", "LESS",
	"LESSEQ", "GREATER", "GREATEREQ", "RANGEIN", "RANGEOUT", "DISJUNCTION",
	"NEGATION", "DATEANDTIME", "FORMAT",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "SIGN", "INTEGER", "FLOAT", "STRING", "NONCONTROL_CHAR",
	"LETTER", "LOWER", "UPPER", "DIGIT", "SPACE", "SYMBOL", "BOOL", "TRUE",
	"FALSE", "LESS", "LESSEQ", "GREATER", "GREATEREQ", "RANGEIN", "RANGEOUT",
	"DISJUNCTION", "NEGATION", "DATEANDTIME", "FORMAT", "YYYY", "MM", "DD",
	"HH", "MMM", "SS",
}

type SFeelLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewSFeelLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *SFeelLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewSFeelLexer(input antlr.CharStream) *SFeelLexer {
	l := new(SFeelLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "SFeel.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SFeelLexer tokens.
const (
	SFeelLexerT__0        = 1
	SFeelLexerT__1        = 2
	SFeelLexerT__2        = 3
	SFeelLexerT__3        = 4
	SFeelLexerSIGN        = 5
	SFeelLexerINTEGER     = 6
	SFeelLexerFLOAT       = 7
	SFeelLexerSTRING      = 8
	SFeelLexerBOOL        = 9
	SFeelLexerLESS        = 10
	SFeelLexerLESSEQ      = 11
	SFeelLexerGREATER     = 12
	SFeelLexerGREATEREQ   = 13
	SFeelLexerRANGEIN     = 14
	SFeelLexerRANGEOUT    = 15
	SFeelLexerDISJUNCTION = 16
	SFeelLexerNEGATION    = 17
	SFeelLexerDATEANDTIME = 18
	SFeelLexerFORMAT      = 19
)
