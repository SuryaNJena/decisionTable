// Code generated from SFeel.g4 by ANTLR 4.9.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 21, 262,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 5, 7, 85, 10, 7, 3, 7, 3, 7, 7, 7, 89,
	10, 7, 12, 7, 14, 7, 92, 11, 7, 5, 7, 94, 10, 7, 3, 8, 3, 8, 3, 8, 3, 8,
	5, 8, 100, 10, 8, 3, 8, 6, 8, 103, 10, 8, 13, 8, 14, 8, 104, 3, 8, 3, 8,
	7, 8, 109, 10, 8, 12, 8, 14, 8, 112, 11, 8, 3, 8, 5, 8, 115, 10, 8, 3,
	9, 3, 9, 7, 9, 119, 10, 9, 12, 9, 14, 9, 122, 11, 9, 3, 9, 3, 9, 3, 10,
	3, 10, 3, 10, 3, 10, 5, 10, 130, 10, 10, 3, 11, 3, 11, 5, 11, 134, 10,
	11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16,
	3, 17, 3, 17, 5, 17, 148, 10, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3,
	19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21,
	3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 26, 3,
	26, 3, 27, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28,
	3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3,
	28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29,
	3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3,
	30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 5, 30, 227,
	10, 30, 3, 31, 3, 31, 3, 31, 3, 31, 5, 31, 233, 10, 31, 3, 32, 3, 32, 3,
	32, 3, 32, 3, 32, 3, 32, 5, 32, 241, 10, 32, 3, 33, 3, 33, 3, 33, 3, 33,
	3, 33, 3, 33, 5, 33, 249, 10, 33, 3, 34, 3, 34, 3, 34, 3, 34, 5, 34, 255,
	10, 34, 3, 35, 3, 35, 3, 35, 3, 35, 5, 35, 261, 10, 35, 2, 2, 36, 3, 3,
	5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 2, 21, 2, 23, 2, 25,
	2, 27, 2, 29, 2, 31, 2, 33, 11, 35, 2, 37, 2, 39, 12, 41, 13, 43, 14, 45,
	15, 47, 16, 49, 17, 51, 18, 53, 19, 55, 20, 57, 21, 59, 2, 61, 2, 63, 2,
	65, 2, 67, 2, 69, 2, 3, 2, 7, 4, 2, 45, 45, 47, 47, 6, 2, 99, 124, 230,
	230, 248, 248, 254, 254, 6, 2, 67, 92, 198, 198, 216, 216, 222, 222, 4,
	2, 11, 11, 34, 34, 7, 2, 35, 35, 37, 49, 60, 66, 93, 98, 125, 128, 2, 269,
	2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2,
	2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2,
	2, 2, 33, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2,
	2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3,
	2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 3, 71,
	3, 2, 2, 2, 5, 74, 3, 2, 2, 2, 7, 76, 3, 2, 2, 2, 9, 78, 3, 2, 2, 2, 11,
	80, 3, 2, 2, 2, 13, 93, 3, 2, 2, 2, 15, 114, 3, 2, 2, 2, 17, 116, 3, 2,
	2, 2, 19, 129, 3, 2, 2, 2, 21, 133, 3, 2, 2, 2, 23, 135, 3, 2, 2, 2, 25,
	137, 3, 2, 2, 2, 27, 139, 3, 2, 2, 2, 29, 141, 3, 2, 2, 2, 31, 143, 3,
	2, 2, 2, 33, 147, 3, 2, 2, 2, 35, 149, 3, 2, 2, 2, 37, 154, 3, 2, 2, 2,
	39, 160, 3, 2, 2, 2, 41, 162, 3, 2, 2, 2, 43, 165, 3, 2, 2, 2, 45, 167,
	3, 2, 2, 2, 47, 170, 3, 2, 2, 2, 49, 172, 3, 2, 2, 2, 51, 174, 3, 2, 2,
	2, 53, 176, 3, 2, 2, 2, 55, 180, 3, 2, 2, 2, 57, 198, 3, 2, 2, 2, 59, 226,
	3, 2, 2, 2, 61, 232, 3, 2, 2, 2, 63, 240, 3, 2, 2, 2, 65, 248, 3, 2, 2,
	2, 67, 254, 3, 2, 2, 2, 69, 260, 3, 2, 2, 2, 71, 72, 7, 48, 2, 2, 72, 73,
	7, 48, 2, 2, 73, 4, 3, 2, 2, 2, 74, 75, 7, 42, 2, 2, 75, 6, 3, 2, 2, 2,
	76, 77, 7, 43, 2, 2, 77, 8, 3, 2, 2, 2, 78, 79, 7, 47, 2, 2, 79, 10, 3,
	2, 2, 2, 80, 81, 9, 2, 2, 2, 81, 12, 3, 2, 2, 2, 82, 94, 7, 50, 2, 2, 83,
	85, 5, 11, 6, 2, 84, 83, 3, 2, 2, 2, 84, 85, 3, 2, 2, 2, 85, 86, 3, 2,
	2, 2, 86, 90, 4, 51, 59, 2, 87, 89, 4, 50, 59, 2, 88, 87, 3, 2, 2, 2, 89,
	92, 3, 2, 2, 2, 90, 88, 3, 2, 2, 2, 90, 91, 3, 2, 2, 2, 91, 94, 3, 2, 2,
	2, 92, 90, 3, 2, 2, 2, 93, 82, 3, 2, 2, 2, 93, 84, 3, 2, 2, 2, 94, 14,
	3, 2, 2, 2, 95, 96, 7, 50, 2, 2, 96, 97, 11, 2, 2, 2, 97, 115, 7, 50, 2,
	2, 98, 100, 5, 11, 6, 2, 99, 98, 3, 2, 2, 2, 99, 100, 3, 2, 2, 2, 100,
	102, 3, 2, 2, 2, 101, 103, 4, 50, 59, 2, 102, 101, 3, 2, 2, 2, 103, 104,
	3, 2, 2, 2, 104, 102, 3, 2, 2, 2, 104, 105, 3, 2, 2, 2, 105, 106, 3, 2,
	2, 2, 106, 110, 7, 48, 2, 2, 107, 109, 4, 50, 59, 2, 108, 107, 3, 2, 2,
	2, 109, 112, 3, 2, 2, 2, 110, 108, 3, 2, 2, 2, 110, 111, 3, 2, 2, 2, 111,
	113, 3, 2, 2, 2, 112, 110, 3, 2, 2, 2, 113, 115, 4, 51, 59, 2, 114, 95,
	3, 2, 2, 2, 114, 99, 3, 2, 2, 2, 115, 16, 3, 2, 2, 2, 116, 120, 7, 36,
	2, 2, 117, 119, 5, 19, 10, 2, 118, 117, 3, 2, 2, 2, 119, 122, 3, 2, 2,
	2, 120, 118, 3, 2, 2, 2, 120, 121, 3, 2, 2, 2, 121, 123, 3, 2, 2, 2, 122,
	120, 3, 2, 2, 2, 123, 124, 7, 36, 2, 2, 124, 18, 3, 2, 2, 2, 125, 130,
	5, 21, 11, 2, 126, 130, 5, 27, 14, 2, 127, 130, 5, 31, 16, 2, 128, 130,
	5, 29, 15, 2, 129, 125, 3, 2, 2, 2, 129, 126, 3, 2, 2, 2, 129, 127, 3,
	2, 2, 2, 129, 128, 3, 2, 2, 2, 130, 20, 3, 2, 2, 2, 131, 134, 5, 23, 12,
	2, 132, 134, 5, 25, 13, 2, 133, 131, 3, 2, 2, 2, 133, 132, 3, 2, 2, 2,
	134, 22, 3, 2, 2, 2, 135, 136, 9, 3, 2, 2, 136, 24, 3, 2, 2, 2, 137, 138,
	9, 4, 2, 2, 138, 26, 3, 2, 2, 2, 139, 140, 4, 50, 59, 2, 140, 28, 3, 2,
	2, 2, 141, 142, 9, 5, 2, 2, 142, 30, 3, 2, 2, 2, 143, 144, 9, 6, 2, 2,
	144, 32, 3, 2, 2, 2, 145, 148, 5, 35, 18, 2, 146, 148, 5, 37, 19, 2, 147,
	145, 3, 2, 2, 2, 147, 146, 3, 2, 2, 2, 148, 34, 3, 2, 2, 2, 149, 150, 7,
	118, 2, 2, 150, 151, 7, 116, 2, 2, 151, 152, 7, 119, 2, 2, 152, 153, 7,
	103, 2, 2, 153, 36, 3, 2, 2, 2, 154, 155, 7, 104, 2, 2, 155, 156, 7, 99,
	2, 2, 156, 157, 7, 110, 2, 2, 157, 158, 7, 117, 2, 2, 158, 159, 7, 103,
	2, 2, 159, 38, 3, 2, 2, 2, 160, 161, 7, 62, 2, 2, 161, 40, 3, 2, 2, 2,
	162, 163, 7, 62, 2, 2, 163, 164, 7, 63, 2, 2, 164, 42, 3, 2, 2, 2, 165,
	166, 7, 64, 2, 2, 166, 44, 3, 2, 2, 2, 167, 168, 7, 64, 2, 2, 168, 169,
	7, 63, 2, 2, 169, 46, 3, 2, 2, 2, 170, 171, 7, 93, 2, 2, 171, 48, 3, 2,
	2, 2, 172, 173, 7, 95, 2, 2, 173, 50, 3, 2, 2, 2, 174, 175, 7, 46, 2, 2,
	175, 52, 3, 2, 2, 2, 176, 177, 7, 112, 2, 2, 177, 178, 7, 113, 2, 2, 178,
	179, 7, 118, 2, 2, 179, 54, 3, 2, 2, 2, 180, 181, 7, 70, 2, 2, 181, 182,
	7, 99, 2, 2, 182, 183, 7, 118, 2, 2, 183, 184, 7, 103, 2, 2, 184, 185,
	7, 67, 2, 2, 185, 186, 7, 112, 2, 2, 186, 187, 7, 102, 2, 2, 187, 188,
	7, 86, 2, 2, 188, 189, 7, 107, 2, 2, 189, 190, 7, 111, 2, 2, 190, 191,
	7, 103, 2, 2, 191, 192, 7, 42, 2, 2, 192, 193, 7, 36, 2, 2, 193, 194, 3,
	2, 2, 2, 194, 195, 5, 57, 29, 2, 195, 196, 7, 36, 2, 2, 196, 197, 7, 43,
	2, 2, 197, 56, 3, 2, 2, 2, 198, 199, 5, 59, 30, 2, 199, 200, 7, 47, 2,
	2, 200, 201, 5, 61, 31, 2, 201, 202, 7, 47, 2, 2, 202, 203, 5, 63, 32,
	2, 203, 204, 7, 86, 2, 2, 204, 205, 5, 65, 33, 2, 205, 206, 7, 47, 2, 2,
	206, 207, 5, 67, 34, 2, 207, 208, 7, 47, 2, 2, 208, 209, 5, 69, 35, 2,
	209, 58, 3, 2, 2, 2, 210, 211, 4, 50, 59, 2, 211, 212, 4, 50, 59, 2, 212,
	213, 4, 50, 59, 2, 213, 227, 4, 51, 59, 2, 214, 215, 4, 50, 59, 2, 215,
	216, 4, 50, 59, 2, 216, 217, 4, 51, 59, 2, 217, 227, 4, 50, 59, 2, 218,
	219, 4, 50, 59, 2, 219, 220, 4, 51, 59, 2, 220, 221, 4, 50, 59, 2, 221,
	227, 4, 50, 59, 2, 222, 223, 4, 51, 59, 2, 223, 224, 4, 50, 59, 2, 224,
	225, 4, 50, 59, 2, 225, 227, 4, 50, 59, 2, 226, 210, 3, 2, 2, 2, 226, 214,
	3, 2, 2, 2, 226, 218, 3, 2, 2, 2, 226, 222, 3, 2, 2, 2, 227, 60, 3, 2,
	2, 2, 228, 229, 7, 50, 2, 2, 229, 233, 4, 51, 59, 2, 230, 231, 7, 51, 2,
	2, 231, 233, 4, 50, 52, 2, 232, 228, 3, 2, 2, 2, 232, 230, 3, 2, 2, 2,
	233, 62, 3, 2, 2, 2, 234, 235, 7, 50, 2, 2, 235, 241, 4, 51, 59, 2, 236,
	237, 4, 51, 52, 2, 237, 241, 4, 50, 59, 2, 238, 239, 7, 53, 2, 2, 239,
	241, 4, 50, 51, 2, 240, 234, 3, 2, 2, 2, 240, 236, 3, 2, 2, 2, 240, 238,
	3, 2, 2, 2, 241, 64, 3, 2, 2, 2, 242, 243, 7, 50, 2, 2, 243, 249, 4, 50,
	59, 2, 244, 245, 7, 51, 2, 2, 245, 249, 4, 50, 59, 2, 246, 247, 7, 52,
	2, 2, 247, 249, 4, 50, 53, 2, 248, 242, 3, 2, 2, 2, 248, 244, 3, 2, 2,
	2, 248, 246, 3, 2, 2, 2, 249, 66, 3, 2, 2, 2, 250, 251, 7, 50, 2, 2, 251,
	255, 4, 50, 59, 2, 252, 253, 4, 51, 55, 2, 253, 255, 4, 50, 59, 2, 254,
	250, 3, 2, 2, 2, 254, 252, 3, 2, 2, 2, 255, 68, 3, 2, 2, 2, 256, 257, 7,
	50, 2, 2, 257, 261, 4, 50, 59, 2, 258, 259, 4, 51, 55, 2, 259, 261, 4,
	50, 59, 2, 260, 256, 3, 2, 2, 2, 260, 258, 3, 2, 2, 2, 261, 70, 3, 2, 2,
	2, 20, 2, 84, 90, 93, 99, 104, 110, 114, 120, 129, 133, 147, 226, 232,
	240, 248, 254, 260, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'..'", "'('", "')'", "'-'", "", "", "", "", "", "'<'", "'<='", "'>'",
	"'>='", "'['", "']'", "','", "'not'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "SIGN", "INTEGER", "FLOAT", "STRING", "BOOL", "LESS",
	"LESSEQ", "GREATER", "GREATEREQ", "RANGEIN", "RANGEOUT", "DISJUNCTION",
	"NEGATION", "DATEANDTIME", "FORMAT",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "SIGN", "INTEGER", "FLOAT", "STRING", "NONCONTROL_CHAR",
	"LETTER", "LOWER", "UPPER", "DIGIT", "SPACE", "SYMBOL", "BOOL", "TRUE",
	"FALSE", "LESS", "LESSEQ", "GREATER", "GREATEREQ", "RANGEIN", "RANGEOUT",
	"DISJUNCTION", "NEGATION", "DATEANDTIME", "FORMAT", "YYYY", "MM", "DD",
	"HH", "MMM", "SS",
}

type SFeelLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewSFeelLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *SFeelLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewSFeelLexer(input antlr.CharStream) *SFeelLexer {
	l := new(SFeelLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "SFeel.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SFeelLexer tokens.
const (
	SFeelLexerT__0        = 1
	SFeelLexerT__1        = 2
	SFeelLexerT__2        = 3
	SFeelLexerT__3        = 4
	SFeelLexerSIGN        = 5
	SFeelLexerINTEGER     = 6
	SFeelLexerFLOAT       = 7
	SFeelLexerSTRING      = 8
	SFeelLexerBOOL        = 9
	SFeelLexerLESS        = 10
	SFeelLexerLESSEQ      = 11
	SFeelLexerGREATER     = 12
	SFeelLexerGREATEREQ   = 13
	SFeelLexerRANGEIN     = 14
	SFeelLexerRANGEOUT    = 15
	SFeelLexerDISJUNCTION = 16
	SFeelLexerNEGATION    = 17
	SFeelLexerDATEANDTIME = 18
	SFeelLexerFORMAT      = 19
)
